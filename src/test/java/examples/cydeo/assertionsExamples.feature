Feature: How to assert in Karate using Karate assertions
  Hamcrest or Junit assertions do not apply

  Background: Put common steps for all scenarios in the feature file and variables and definitions
    * def oneSpartan =
    """
    {
        "id": 1,
        "name": "Meade",
        "gender": "Male",
        "phone": 3584128232
    }
    """
    * def fourSpartans = read("classpath:examples/data/spartans.json")


  Scenario: simple match examples, html report is generated by default in Karate
    # Assert that the name of onSpartan is Meade
    * match oneSpartan.name == 'Meade'
    # Assert that the name of the third spartan in fourSpartans is Fidole
    * match fourSpartans[2].name == 'Fidole'

  Scenario: fuzzy matching in Karate
    # Use fuzzy matching to assert about the type of data
    # Use fuzzy matching to assert about the existence of a the variable
    # use #string to check that it is a string, or #number for number, #present for if exists
    * match oneSpartan.name == "#string"
    * match oneSpartan.id == "#number"
    * match oneSpartan.phone == "#present"
    * match oneSpartan.sword == "#notpresent"
    # can get the size of an array
    * def length = fourSpartans.length
    * match length == 4
    * def length = fourSpartans[2].name.length
    * match length == 6



  Scenario: match each, looping inside JSON Array objects
    # assert that all id's are number
    * match each fourSpartans[*].id == "#number"
    # assert that an expected object is in the Json array
    * def expectedSpartan =
    """
      {
    "id": 2,
    "name": "Nels",
    "gender": "Male",
    "phone": 4218971348
  }
    """
    * match fourSpartans contains expectedSpartan
    # assert that there is aperson named Nels in fourSpartans
    * match fourSpartans constains any "Nels"


